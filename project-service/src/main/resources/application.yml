server:
  port: 8082

spring:
  application:
    name: project-service

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

  main:
    banner-mode: console

  devtools:
    restart:
      enabled: false
  
  datasource:
    url: jdbc:postgresql://localhost:5432/tasker_db?currentSchema=tasker_sc
    username: tm_user
    password: tasker
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/tasker_realm
          jwk-set-uri: http://localhost:8090/realms/tasker_realm/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8090/realms/tasker_realm
        registration:
          project-service:
            provider: keycloak
            client-id: project-service-internal
            client-secret: MzfiQQvU7UBXABih2GQoCPOU3gJ2ddwR
            authorization-grant-type: client_credentials
            scope:
              - openid
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /api-docs/swagger-config
    url: /api-docs
  packages-to-scan: org.tasker.projectservice

tasker:
  services:
    users:
      url: ${USER_MANAGEMENT_SERVICE_URL:http://localhost:8081}
  auth:
    client:
      registration-id: project-service
      principal: internal

# Logging
logging:
  level:
    org.springframework.security: DEBUG
    org.tasker.projectservice: DEBUG